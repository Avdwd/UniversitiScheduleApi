// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UNISchedule.DataAccess;

#nullable disable

namespace UNISchedule.DataAccess.Migrations
{
    [DbContext(typeof(UniScheduleDbContext))]
    [Migration("20250413091355_UNIDatabase")]
    partial class UNIDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ClassTimeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Timeframe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ClassTimeEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ClassroomEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Building")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClassroomEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.GroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstituteEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("InstituteEntityId");

                    b.ToTable("GroupEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.InstituteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("InstituteEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ScheduleRecordEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalData")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ClassTimeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("SubjectAssignmentEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassTimeEntityId");

                    b.HasIndex("ClassroomEntityId");

                    b.HasIndex("SubjectAssignmentEntityId")
                        .IsUnique();

                    b.ToTable("ScheduleRecordEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.SubjectAssignmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScheduleRecordEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeSubjectEntityID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupEntityId");

                    b.HasIndex("SubjectEntityId");

                    b.HasIndex("TypeSubjectEntityID");

                    b.ToTable("SubjectAssignmentEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SubjectEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.TypeSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeSubjectEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.GroupEntity", b =>
                {
                    b.HasOne("UNISchedule.DataAccess.Entities.InstituteEntity", "InstituteEntity")
                        .WithMany("Groups")
                        .HasForeignKey("InstituteEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InstituteEntity");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ScheduleRecordEntity", b =>
                {
                    b.HasOne("UNISchedule.DataAccess.Entities.ClassTimeEntity", "ClassTime")
                        .WithMany("ScheduleRecordEntities")
                        .HasForeignKey("ClassTimeEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UNISchedule.DataAccess.Entities.ClassroomEntity", "ClassroomEntity")
                        .WithMany("ScheduleRecordEntities")
                        .HasForeignKey("ClassroomEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UNISchedule.DataAccess.Entities.SubjectAssignmentEntity", "SubjectAssignmentEntity")
                        .WithOne("ScheduleRecordEntitis")
                        .HasForeignKey("UNISchedule.DataAccess.Entities.ScheduleRecordEntity", "SubjectAssignmentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTime");

                    b.Navigation("ClassroomEntity");

                    b.Navigation("SubjectAssignmentEntity");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.SubjectAssignmentEntity", b =>
                {
                    b.HasOne("UNISchedule.DataAccess.Entities.GroupEntity", "GroupEntity")
                        .WithMany("SubjectAssignments")
                        .HasForeignKey("GroupEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UNISchedule.DataAccess.Entities.SubjectEntity", "SubjectEntity")
                        .WithMany("SubjectAssignmentEntities")
                        .HasForeignKey("SubjectEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UNISchedule.DataAccess.Entities.TypeSubjectEntity", "TypeSubjectEntity")
                        .WithMany("SubjectAssignmentEntities")
                        .HasForeignKey("TypeSubjectEntityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GroupEntity");

                    b.Navigation("SubjectEntity");

                    b.Navigation("TypeSubjectEntity");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ClassTimeEntity", b =>
                {
                    b.Navigation("ScheduleRecordEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.ClassroomEntity", b =>
                {
                    b.Navigation("ScheduleRecordEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.GroupEntity", b =>
                {
                    b.Navigation("SubjectAssignments");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.InstituteEntity", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.SubjectAssignmentEntity", b =>
                {
                    b.Navigation("ScheduleRecordEntitis")
                        .IsRequired();
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.SubjectEntity", b =>
                {
                    b.Navigation("SubjectAssignmentEntities");
                });

            modelBuilder.Entity("UNISchedule.DataAccess.Entities.TypeSubjectEntity", b =>
                {
                    b.Navigation("SubjectAssignmentEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
